"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A datetime and timezone string in ISO 8601 format `Y-m-dTH:i:sO`, e.g. `2020-04-20T13:53:12+02:00`."
scalar DateTimeTz @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTimeTz")

type Mutation
type Query

type Query {
    users: [User!]! @paginate(defaultCount: 10)
    user(id: ID @eq): User @find
    
    #brings all the animals
    animals: [Animal] @all
    animal(id: ID @eq): Animal @find

    #brings all the vehicles
    vehicles: [Vehicle] @all
    vehicle(id: ID @eq): Vehicle @find

}



type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
}

type Animal{
    id: ID!
    name: String!
    color: String!
    weight: Float!
    created_at: DateTime!
    updated_at: DateTime!
}

type Vehicle{
    id: ID!
    brand: String!
    color: String!
    plate: String!
    model: String!
    allTerrain: Boolean!
    created_at: DateTime!
    updated_at: DateTime!
}


extend type Mutation{
    createAnimal(input: CreateAnimalInput! @spread): Animal @create
    deleteAnimal(id: ID!): Animal @delete
    updateAnimal(input: UpdateAnimalInput! @spread) : Animal @field(resolver: "UpdateAnimal@__invoke")
}

extend type Mutation{
    createVehicle(input: CreateVehicleInput! @spread): Vehicle @create
    deleteVehicle(id: ID!): Vehicle @delete
    updateVehicle(input: UpdateVehicleInput! @spread) : Vehicle @field(resolver: "UpdateVehicle@__invoke")
}

input CreateAnimalInput{
    name: String!
    color: String!
    weight: Float!
}


input UpdateAnimalInput{
    id: ID!
    name: String!
    color: String!
    weight: Float!
}

input UpdateVehicleInput{
    id: ID!
    brand: String!
    color: String!
    plate: String!
    model: String!
    allTerrain: Boolean!
}

input CreateVehicleInput{
    brand: String!
    color: String!
    plate: String!
    model: String!
    allTerrain: Boolean!
}